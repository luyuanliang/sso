<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.web.common.sso.server.dao.SsoTokenDAO">

    <resultMap id="SsoTokenDO" type = "org.web.common.sso.server.domain.SsoTokenDO">
        <id column="sso_token_id" property="ssoTokenId" />
		<result column="sso_token"  property="ssoToken"  />
		<result column="account_num"  property="accountNum"  />
		<result column="account_name"  property="accountName"  />
		<result column="expire_time"  property="expireTime"  />
		<result column="update_time"  property="updateTime"  />
		<result column="create_time"  property="createTime"  />
		<result column="is_delete"  property="isDelete"  />
    </resultMap>

    <sql id="all_columns">
		 sso_token_id ,  sso_token ,  account_num ,  account_name ,  expire_time ,  update_time ,  create_time , is_delete
	</sql>

    <sql id="query_condition">
		<if test = "ssoTokenId != null " ><![CDATA[ AND sso_token_id = #{ssoTokenId}]]></if>		
		<if test = "ssoTokenIdList != null and ssoTokenIdList.size()!=0" >
			AND sso_token_id IN 
			<foreach item="item" index="index" collection="ssoTokenIdList" open="(" separator="," close=")"> 
			#{item} 
			</foreach>
		</if>
		<if test = "ssoToken != null " ><![CDATA[ AND sso_token = #{ssoToken}]]></if>		
		<if test = "accountNum != null " ><![CDATA[ AND account_num = #{accountNum}]]></if>		
		<if test = "accountName != null " ><![CDATA[ AND account_name = #{accountName}]]></if>		
		<if test = "expireTime != null " ><![CDATA[ AND expire_time = #{expireTime}]]></if>		
	    <if test = "lessThanExpireTime != null " ><![CDATA[ AND expire_time < #{lessThanExpireTime}]]></if>
        <if test = "equalAndLessThanExpireTime != null " ><![CDATA[ AND expire_time <= #{equalAndLessThanExpireTime}]]></if>
        <if test = "moreThanExpireTime != null " ><![CDATA[ AND expire_time > #{moreThanExpireTime}]]></if>
        <if test = "equalAndMoreThanExpireTime != null " ><![CDATA[ AND expire_time >= #{equalAndMoreThanExpireTime}]]></if>
		<if test = "updateTime != null " ><![CDATA[ AND update_time = #{updateTime}]]></if>		
	    <if test = "lessThanUpdateTime != null " ><![CDATA[ AND update_time < #{lessThanUpdateTime}]]></if>
        <if test = "equalAndLessThanUpdateTime != null " ><![CDATA[ AND update_time <= #{equalAndLessThanUpdateTime}]]></if>
        <if test = "moreThanUpdateTime != null " ><![CDATA[ AND update_time > #{moreThanUpdateTime}]]></if>
        <if test = "equalAndMoreThanUpdateTime != null " ><![CDATA[ AND update_time >= #{equalAndMoreThanUpdateTime}]]></if>
		<if test = "createTime != null " ><![CDATA[ AND create_time = #{createTime}]]></if>		
	    <if test = "lessThanCreateTime != null " ><![CDATA[ AND create_time < #{lessThanCreateTime}]]></if>
        <if test = "equalAndLessThanCreateTime != null " ><![CDATA[ AND create_time <= #{equalAndLessThanCreateTime}]]></if>
        <if test = "moreThanCreateTime != null " ><![CDATA[ AND create_time > #{moreThanCreateTime}]]></if>
        <if test = "equalAndMoreThanCreateTime != null " ><![CDATA[ AND create_time >= #{equalAndMoreThanCreateTime}]]></if>
		<if test = "isDelete != null " ><![CDATA[ AND is_delete = #{isDelete}]]></if>		
    </sql>

    <insert id="insertSsoToken" parameterType="org.web.common.sso.server.domain.SsoTokenDO" useGeneratedKeys="true" keyProperty="ssoTokenId">
		INSERT INTO sso_token (<include refid="all_columns" />) VALUES
		(
		#{ssoTokenId} , #{ssoToken} , #{accountNum} , #{accountName} , #{expireTime} , #{updateTime} , #{createTime} , #{isDelete}
		)
    </insert>

	
    <select id="selectSsoTokenList" resultMap="SsoTokenDO" parameterType="org.web.common.sso.server.query.QuerySsoToken">
        SELECT <include refid="all_columns" /> FROM sso_token
		<where>
			  <include refid="query_condition"/>
		</where>
		<if test="orderByClause !=null" > ORDER BY ${orderByClause}</if>
		<!-- add order or query info. -->
		<![CDATA[

		]]>
		
		<if test="startNum != null" > LIMIT #{startNum},#{pageSize}</if>
    </select>

	
    <select id="countSsoTokenList" resultType="int" parameterType="org.web.common.sso.server.query.QuerySsoToken">
		SELECT COUNT(1) FROM sso_token
		<where>
			  <include refid="query_condition"/>
		</where>

		<!-- add order or query info. -->
		<![CDATA[

		]]>
    </select>

    <select id="selectDistinctList" resultType="String" parameterType="org.web.common.sso.server.query.QuerySsoToken">
        SELECT DISTINCT( ${distinct} ) FROM  sso_token <where>  <include refid="query_condition"/> 	</where>
    </select>

    <select id="selectSsoTokenBySsoTokenId" resultMap="SsoTokenDO" parameterType="Long">
        SELECT <include refid="all_columns" /> FROM sso_token WHERE sso_token_id = #{ssoTokenId}
    </select>

    <update id="updateSsoTokenBySsoTokenId" parameterType="org.web.common.sso.server.domain.SsoTokenDO">
        UPDATE sso_token
		<set>
			<if test="ssoToken!=null"><![CDATA[sso_token=#{ssoToken},]]></if>
			<if test="accountNum!=null"><![CDATA[account_num=#{accountNum},]]></if>
			<if test="accountName!=null"><![CDATA[account_name=#{accountName},]]></if>
			<if test="expireTime!=null"><![CDATA[expire_time=#{expireTime},]]></if>
			<if test="updateTime!=null"><![CDATA[update_time=#{updateTime},]]></if>
			<if test="createTime!=null"><![CDATA[create_time=#{createTime},]]></if>
			<if test="isDelete!=null"><![CDATA[is_delete=#{isDelete},]]></if>
		</set>

        <![CDATA[ WHERE  sso_token_id = #{ssoTokenId} ]]>

      </update>

</mapper>

